name: Build

on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: termx-fml

jobs:

  build:

    runs-on: ubuntu-latest
    name: Build

    permissions:
      packages: write
      contents: read

    #    strategy:
    #      matrix:
    #        node-version: [ 18.x, 20.x, 22.x ]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      #      - name: Use Node.js ${{ matrix.node-version }}
      #        uses: actions/setup-node@v4
      #        with:
      #          node-version: ${{ matrix.node-version }}

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Resolve dependencies
        run: npm install

      #      - name: Lint
      #        run: npm run lint
      #
      #      - name: Test
      #        run: npm test

      - name: Build
        run: npm run build

      - name: Build the Docker image
        run: docker build . --file ./Dockerfile --tag $IMAGE_NAME

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Publish
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
